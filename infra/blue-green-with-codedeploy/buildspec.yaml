version: 0.2

env:
  secrets-manager:
    DOCKER_HUB_USERNAME: "$DOCKER_HUB_SECRET_ARN:username"
    DOCKER_HUB_PASSWORD: "$DOCKER_HUB_SECRET_ARN:password"

phases:
  install:
    runtime-versions:
      nodejs: latest
  pre_build:
    commands:
      - apt install -y jq
      - echo Logging into DockerHub...
      - docker login --username $DOCKER_HUB_USERNAME --password $DOCKER_HUB_PASSWORD
  build:
    commands:
      - aws --version
      - ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - aws ecr get-login-password | docker login --username AWS --password-stdin $REPOSITORY_URI
      - docker build -t $REPOSITORY_URI:latest -t $REPOSITORY_URI:$IMAGE_TAG .
      - echo Completed container image built and tagging on `date`
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Completed container image push on `date`
      - sed -i 's@REPOSITORY_URI@'$REPOSITORY_URI'@g' taskdef.json
      - sed -i 's@IMAGE_TAG@'$IMAGE_TAG'@g' taskdef.json
      - sed -i 's@AWS_REGION@'$AWS_REGION'@g' taskdef.json
      - sed -i 's@TASK_EXECUTION_ARN@'$TASK_EXECUTION_ARN'@g' taskdef.json
      - sed -i 's@API_NAME@'$API_NAME'@g' taskdef.json
      - echo Completed task definition update on `date`
      - sed -i 's@<API_NAME>@'$API_NAME'@g' appspec.yaml
      - echo Completed appspec.yaml update on `date`
      - cat appspec.yaml
  post_build:
    commands:
      - docker images
      - cat appspec.yaml
      - cat taskdef.json
artifacts:
  files:
    - "appspec.yaml"
    - "taskdef.json"
